version: "3.1"

services:
  db:
    image: postgres:15.2
    environment:
      POSTGRES_DB: aphrc_ssds
      POSTGRES_USER: aphrc_ssds
      POSTGRES_PASSWORD: aphrc_ssds_pw
    restart: always
    volumes:
      - aphrc_dashboard_db:/var/lib/postgresql/data
    networks:
      - web

  web:
    build:
      context: .
    depends_on:
      - db
    expose:
      - "8090"
    env_file: .env
    environment:
      - HS_API_KEY
      - HS_TICKET_PIPELINE
      - HS_TICKET_PIPELINE_STAGE
      - ENVIRONMENT
    working_dir: /code/
    volumes:
      - ./:/code/
    restart: always
    networks:
      - web

  nginx:
    container_name: nginx
    build: ./config/nginx/
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot/conf:/etc/ssl
      - ./certbot/www:/var/www/certbot
      - ./static:/static
      - ./media:/media
    restart: always
    command: "/bin/sh -c 'while :; do sleep 12h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - web

  certbot:
    container_name: CertBot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./certbot_logs:/var/log/letsencrypt
    depends_on:
      - nginx
    networks:
      - web
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  aphrc_dashboard_db:

networks:
  web:
