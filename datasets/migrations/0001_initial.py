# Generated by Django 4.1.7 on 2023-03-30 12:28

import datetime
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtailmetadata.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtaildocs", "0012_uploadeddocument"),
        ("wagtailcore", "0078_referenceindex"),
        ("wagtailimages", "0024_index_image_file_hash"),
    ]

    operations = [
        migrations.CreateModel(
            name="DatasetPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "hero_image_credit_name",
                    models.TextField(
                        blank=True,
                        help_text="Name of source of image used in hero if any",
                        null=True,
                        verbose_name="Image credit name",
                    ),
                ),
                (
                    "hero_image_credit_url",
                    models.URLField(
                        blank=True,
                        help_text="A Link to the original source of the image if any",
                        null=True,
                        verbose_name="Image credit url",
                    ),
                ),
                (
                    "hero_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="A description of the page content",
                        null=True,
                    ),
                ),
                (
                    "hero_link_caption",
                    models.CharField(
                        blank=True,
                        help_text="Text to display on the link button",
                        max_length=255,
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "anchor",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "anchor_id",
                                            wagtail.blocks.CharBlock(
                                                help_text="The unique indentifier for this anchor",
                                                required=True,
                                            ),
                                        )
                                    ]
                                ),
                            ),
                            (
                                "paragraph_block",
                                wagtail.blocks.RichTextBlock(
                                    features=[
                                        "h2",
                                        "h3",
                                        "h4",
                                        "bold",
                                        "italic",
                                        "ol",
                                        "ul",
                                        "hr",
                                        "link",
                                        "document-link",
                                        "image",
                                        "embed",
                                    ],
                                    icon="fa-paragraph",
                                    template="blocks/paragraph_block.html",
                                ),
                            ),
                            (
                                "block_quote",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("text", wagtail.blocks.TextBlock()),
                                        (
                                            "source",
                                            wagtail.blocks.TextBlock(
                                                help_text="Who is this quote acredited to?",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "button_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "caption",
                                            wagtail.blocks.CharBlock(
                                                help_text="Leave blank if you wish to use the page title as a caption",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                help_text="For the link/button to show, either this or the url are required",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "url",
                                            wagtail.blocks.URLBlock(
                                                help_text="An alternative to an internal page",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "link_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "caption",
                                            wagtail.blocks.CharBlock(
                                                help_text="Leave blank if you wish to use the page title as a caption",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                help_text="For the link/button to show, either this or the url are required",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "url",
                                            wagtail.blocks.URLBlock(
                                                help_text="An alternative to an internal page",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "image",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=True
                                            ),
                                        ),
                                        (
                                            "credit_name",
                                            wagtail.blocks.CharBlock(
                                                help_text="Name of the image source",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "credit_url",
                                            wagtail.blocks.URLBlock(
                                                help_text="URL of the image source",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "caption",
                                            wagtail.blocks.CharBlock(
                                                help_text="Caption to appear beneath the image",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "video",
                                wagtail.embeds.blocks.EmbedBlock(
                                    help_text="Insert an embed URL e.g https://www.youtube.com/embed/SGJFWirQ3ks",
                                    icon="fa-video-camera",
                                    required=False,
                                    template="blocks/embed_block.html",
                                ),
                            ),
                            (
                                "cta",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(
                                                label="Title", required=True
                                            ),
                                        ),
                                        (
                                            "body",
                                            wagtail.blocks.TextBlock(
                                                help_text="Optional: describe the purpose of your call to action in a bit more detail",
                                                label="Description",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "button_text",
                                            wagtail.blocks.CharBlock(
                                                help_text="Optional: this is required to show the button",
                                                label="Button Caption",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "button_url",
                                            wagtail.blocks.URLBlock(
                                                help_text="Optional: this is required to show the button",
                                                label="Button URL",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "button_page",
                                            wagtail.blocks.PageChooserBlock(
                                                help_text="Optional: has priority over the button URL field",
                                                label="Button Page",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "accordion",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "accordion_items",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "name",
                                                            wagtail.blocks.TextBlock(
                                                                icon="fa-text"
                                                            ),
                                                        ),
                                                        (
                                                            "description",
                                                            wagtail.blocks.RichTextBlock(
                                                                features=[
                                                                    "h2",
                                                                    "h3",
                                                                    "h4",
                                                                    "bold",
                                                                    "italic",
                                                                    "ol",
                                                                    "ul",
                                                                    "hr",
                                                                    "link",
                                                                    "document-link",
                                                                    "image",
                                                                    "embed",
                                                                ],
                                                                icon="fa-paragraph",
                                                                template="blocks/paragraph_block.html",
                                                            ),
                                                        ),
                                                    ]
                                                )
                                            ),
                                        )
                                    ]
                                ),
                            ),
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                        verbose_name="Page Body",
                    ),
                ),
                ("release_date", models.DateField(default=datetime.datetime.now)),
                (
                    "meta_data",
                    wagtail.fields.StreamField(
                        [
                            (
                                "description",
                                wagtail.blocks.RichTextBlock(
                                    features=[
                                        "h2",
                                        "h3",
                                        "h4",
                                        "bold",
                                        "italic",
                                        "ol",
                                        "ul",
                                        "hr",
                                        "link",
                                        "document-link",
                                        "image",
                                        "embed",
                                    ],
                                    required=True,
                                ),
                            ),
                            (
                                "internal_notes",
                                wagtail.blocks.RichTextBlock(
                                    features=[
                                        "h2",
                                        "h3",
                                        "h4",
                                        "bold",
                                        "italic",
                                        "ol",
                                        "ul",
                                        "hr",
                                        "link",
                                        "document-link",
                                        "image",
                                        "embed",
                                    ],
                                    required=False,
                                ),
                            ),
                            (
                                "licence",
                                wagtail.blocks.RichTextBlock(
                                    features=[
                                        "h2",
                                        "h3",
                                        "h4",
                                        "bold",
                                        "italic",
                                        "ol",
                                        "ul",
                                        "hr",
                                        "link",
                                        "document-link",
                                        "image",
                                        "embed",
                                    ],
                                    required=False,
                                ),
                            ),
                            (
                                "citation",
                                wagtail.blocks.RichTextBlock(
                                    features=[
                                        "h2",
                                        "h3",
                                        "h4",
                                        "bold",
                                        "italic",
                                        "ol",
                                        "ul",
                                        "hr",
                                        "link",
                                        "document-link",
                                        "image",
                                        "embed",
                                    ],
                                    required=False,
                                    template="blocks/urlize_richtext.html",
                                ),
                            ),
                        ],
                        help_text="A description is expected, but only one of each shall be shown",
                        use_json_field=True,
                        verbose_name="Content",
                    ),
                ),
                ("dataset_title", models.TextField(blank=True, null=True, unique=True)),
                (
                    "related_datasets_title",
                    models.CharField(
                        blank=True,
                        default="Related datasets",
                        max_length=255,
                        verbose_name="Section Title",
                    ),
                ),
                (
                    "hero_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Hero Image",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "hero_link",
                    models.ForeignKey(
                        blank=True,
                        help_text="Choose a page to link to for the Call to Action",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailcore.page",
                        verbose_name="Hero link",
                    ),
                ),
                (
                    "search_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                        verbose_name="Search image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dataset Page",
            },
            bases=(
                wagtailmetadata.models.WagtailImageMetadataMixin,
                "wagtailcore.page",
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="DataTopic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        help_text="Optional: will be auto-generated from name if left blank.",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Data Topics",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DatasetPageTopic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dataset_topics",
                        to="datasets.datasetpage",
                    ),
                ),
                (
                    "topic",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="datasets.datatopic",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DatasetListing",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "hero_image_credit_name",
                    models.TextField(
                        blank=True,
                        help_text="Name of source of image used in hero if any",
                        null=True,
                        verbose_name="Image credit name",
                    ),
                ),
                (
                    "hero_image_credit_url",
                    models.URLField(
                        blank=True,
                        help_text="A Link to the original source of the image if any",
                        null=True,
                        verbose_name="Image credit url",
                    ),
                ),
                (
                    "hero_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="A description of the page content",
                        null=True,
                    ),
                ),
                (
                    "hero_link_caption",
                    models.CharField(
                        blank=True,
                        help_text="Text to display on the link button",
                        max_length=255,
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "anchor",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "anchor_id",
                                            wagtail.blocks.CharBlock(
                                                help_text="The unique indentifier for this anchor",
                                                required=True,
                                            ),
                                        )
                                    ]
                                ),
                            ),
                            (
                                "paragraph_block",
                                wagtail.blocks.RichTextBlock(
                                    features=[
                                        "h2",
                                        "h3",
                                        "h4",
                                        "bold",
                                        "italic",
                                        "ol",
                                        "ul",
                                        "hr",
                                        "link",
                                        "document-link",
                                        "image",
                                        "embed",
                                    ],
                                    icon="fa-paragraph",
                                    template="blocks/paragraph_block.html",
                                ),
                            ),
                            (
                                "block_quote",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("text", wagtail.blocks.TextBlock()),
                                        (
                                            "source",
                                            wagtail.blocks.TextBlock(
                                                help_text="Who is this quote acredited to?",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "button_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "caption",
                                            wagtail.blocks.CharBlock(
                                                help_text="Leave blank if you wish to use the page title as a caption",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                help_text="For the link/button to show, either this or the url are required",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "url",
                                            wagtail.blocks.URLBlock(
                                                help_text="An alternative to an internal page",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "link_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "caption",
                                            wagtail.blocks.CharBlock(
                                                help_text="Leave blank if you wish to use the page title as a caption",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                help_text="For the link/button to show, either this or the url are required",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "url",
                                            wagtail.blocks.URLBlock(
                                                help_text="An alternative to an internal page",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "image",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=True
                                            ),
                                        ),
                                        (
                                            "credit_name",
                                            wagtail.blocks.CharBlock(
                                                help_text="Name of the image source",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "credit_url",
                                            wagtail.blocks.URLBlock(
                                                help_text="URL of the image source",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "caption",
                                            wagtail.blocks.CharBlock(
                                                help_text="Caption to appear beneath the image",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "video",
                                wagtail.embeds.blocks.EmbedBlock(
                                    help_text="Insert an embed URL e.g https://www.youtube.com/embed/SGJFWirQ3ks",
                                    icon="fa-video-camera",
                                    required=False,
                                    template="blocks/embed_block.html",
                                ),
                            ),
                            (
                                "cta",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(
                                                label="Title", required=True
                                            ),
                                        ),
                                        (
                                            "body",
                                            wagtail.blocks.TextBlock(
                                                help_text="Optional: describe the purpose of your call to action in a bit more detail",
                                                label="Description",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "button_text",
                                            wagtail.blocks.CharBlock(
                                                help_text="Optional: this is required to show the button",
                                                label="Button Caption",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "button_url",
                                            wagtail.blocks.URLBlock(
                                                help_text="Optional: this is required to show the button",
                                                label="Button URL",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "button_page",
                                            wagtail.blocks.PageChooserBlock(
                                                help_text="Optional: has priority over the button URL field",
                                                label="Button Page",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "accordion",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "accordion_items",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "name",
                                                            wagtail.blocks.TextBlock(
                                                                icon="fa-text"
                                                            ),
                                                        ),
                                                        (
                                                            "description",
                                                            wagtail.blocks.RichTextBlock(
                                                                features=[
                                                                    "h2",
                                                                    "h3",
                                                                    "h4",
                                                                    "bold",
                                                                    "italic",
                                                                    "ol",
                                                                    "ul",
                                                                    "hr",
                                                                    "link",
                                                                    "document-link",
                                                                    "image",
                                                                    "embed",
                                                                ],
                                                                icon="fa-paragraph",
                                                                template="blocks/paragraph_block.html",
                                                            ),
                                                        ),
                                                    ]
                                                )
                                            ),
                                        )
                                    ]
                                ),
                            ),
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                        verbose_name="Page Body",
                    ),
                ),
                (
                    "hero_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Hero Image",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "hero_link",
                    models.ForeignKey(
                        blank=True,
                        help_text="Choose a page to link to for the Call to Action",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailcore.page",
                        verbose_name="Hero link",
                    ),
                ),
                (
                    "search_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                        verbose_name="Search image",
                    ),
                ),
            ],
            options={
                "verbose_name": "DataSet Listing",
            },
            bases=(
                wagtailmetadata.models.WagtailImageMetadataMixin,
                "wagtailcore.page",
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="DatasetDownloads",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Optional: document title, defaults to the file name if left blank",
                        max_length=255,
                    ),
                ),
                (
                    "file",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtaildocs.document",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dataset_downloads",
                        to="datasets.datasetpage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
